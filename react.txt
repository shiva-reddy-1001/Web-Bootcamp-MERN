React **

babel is javascript compiler used by react
react and reactDOM,
root id in html.
(vanilla js ,old)
JSX (add html in js) can add html in js and again js in that html
cant write statements that way but
statements vs expressions
 one element in render
template literal `${a} ${b}` injecting string in js
js date = new Date()
className for class to add for css in render, camelcase always
?grayscale
inline css, style={{color:"red"}}
css kebab case, if in jsx convert to camel case
const customStyle = {
	color :"red",
	fontSize : "20px",
	border : "1px solid black"
}
pascal case for components
1 default export per file (name doesnt matter), remaining as 
export {a,b,c...}; where a b c names are same in import
import d,{a,b,c} from
or
import * as name from
name.a...name.b....

npx create-react-app name

prop as parameter, prop.a....
<name a="value"....>
func.. app(prop){
}

contacts.map(createCard);
createCard takes contact as input and returns card

map vs foreach
reduce , filter
find, findIndex

ternary and 

hooks, use State
UI = F(state)
use hooks inside func component
var [count,setCount] = React.useState(0);

const [cat,dog] = animals
const {name,sound,feeding : {food,water}} = cat

controlled components
 Desctructuring
hooks vs classes
Event handlers
synthetic event

spread operator
a1 = [a,b,c,d]
a2 = [a,b,...a1,c,d]
